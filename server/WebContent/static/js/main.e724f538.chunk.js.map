{"version":3,"sources":["tools/ValidationToolBox.js","store/actions/actions.js","components/BoxTable.js","components/SaveButton.js","components/SelectDestination.js","components/ColorPicker.js","components/WeightInput.js","components/NameInput.js","components/BoxForm.js","App.js","store/reducer.js","index.js"],"names":["module","exports","this","isBlue","stringColor","R","G","B","parseInt","min","Math","isNumeric","stringNumber","myString","stringLength","length","i","includes","isHex","hexString","undefined","isColor","isValidDestination","dest","arrayDest","countryCode","validateDestination","destination","destArr","validateColor","color","validateWeight","weight","validateName","name","validateSave","box","BoxTable","props","onUpdateBoxes","boxes","map","index","key","style","backgroundColor","parseFloat","priceMultiplier","toFixed","id","totalWeight","totalPrice","Component","connect","state","dispatch","dispach","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","resp","responseText","respJson","JSON","parse","type","data","tools","require","SaveButton","onClick","onUpdateSave","className","saved","hidden","hideSave","serverErrorBanner","serverErrors","valid","errorTexts","nameErrorText","weightErrorText","colorErrorText","destinationErrorText","destinations","boxData","finalBox","setRequestHeader","stringify","localeCompare","value","inputCode","promtInvalidInputs","SelectDestination","onUpdateDestinations","onChange","onChangeDestination","errorText","evt","target","selectedIndex","ColorPicker","onBlur","onvalidate","onColorChange","errors","WeightInput","onNumberChange","text","NameInput","onNameChange","nameErrors","BoxForm","App","basename","onReset","to","path","component","initialState","progress","lastLength","isEmpty","isToLong","weightErrors","isZero","isNegative","tooHeavy","colorErrors","destinationerrors","isProperDestination","reducer","action","newState","document","getElementById","substring","initialError","destinationErrors","store","createStore","applyMiddleware","thunk","ReactDOM","render","process","REACT_APP_ROUTER_BASE"],"mappings":"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","file":"static/js/main.e724f538.chunk.js","sourcesContent":["function ValidationToolBox() {\r\n  /*\r\n    input type:\r\n    string representation of RGB color in the folowing format: \"#RRGGBB\"\r\n    where RR, GG, and BB respectivly represents hexadecimal numbers*/\r\n  this.isBlue = function(stringColor) {\r\n    let R = stringColor[1] + stringColor[2];\r\n    let G = stringColor[3] + stringColor[4];\r\n    let B = stringColor[5] + stringColor[6];\r\n\r\n    //convert the string representation of hexadecimal numbers to integers in decimal\r\n    R = parseInt(\"0x\" + R);\r\n    G = parseInt(\"0x\" + G);\r\n    B = parseInt(\"0x\" + B);\r\n\r\n    // subtract the least prominant color to RGB to get the proportional differance between the differant colors\r\n    let min = Math.min(R, G, B);\r\n    R = R - min;\r\n    B = B - min;\r\n    G = G - min;\r\n\r\n    /*FYI I draw the boundary of wheter a color blue from a turquoise(R:0 G:255 B:255) all the way to purple(R:127 G:0 B:255).\r\n      That is if the saturation is maxed out, and brightness is at 50%. The detemening factor is the *differance* in proportions between RGB,\r\n      so the boundory in differential terms would be turquoise(R:0.0 G:1.0 B:1.0) all the way to purple(R:0.5 G:0.0 B:1.0). To get the difference\r\n      in RGB I subtract the least prominant color from RGB to get the least prominat color to 0 and the remaining two in teh right proportions.*/\r\n    //check if blue is the most prominant color\r\n    if (B > G && B > R) {\r\n      if (G < R) {\r\n        if (R / B > 0.5) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  /*\r\n    input type:\r\n    String representation of a number*/\r\n  this.isNumeric = function(stringNumber) {\r\n    let myString = \"\" + stringNumber;\r\n    let stringLength = myString.length;\r\n    let template = \"0123456789\";\r\n\r\n    for (let i = 0; i < stringLength; i++) {\r\n      if (!template.includes(myString[i])) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n  /*\r\n    input type:\r\n    String representation of a two digit hexadecimal number*/\r\n  this.isHex = function(hexString) {\r\n    if (hexString !== undefined) {\r\n      // checks if all the characters (except for the \"#\") are from 0-f hex\r\n      let template = \"0123456789abcdef\";\r\n      if (hexString.length > 1) {\r\n        for (let i = 1; i < hexString.length; i++) {\r\n          if (!template.includes(hexString[i])) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  /*\r\n    input type:\r\n    String representation of color*/\r\n  this.isColor = function(stringColor) {\r\n    if (stringColor !== undefined) {\r\n      if (stringColor.length < 1) {\r\n        return false;\r\n      }\r\n      if (stringColor.length > 7) {\r\n        return false;\r\n      }\r\n      if (stringColor.length === 7) {\r\n        if (stringColor[0] !== \"#\") {\r\n          return false;\r\n        }\r\n\r\n        if (this.isHex(stringColor) === false) {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n      return true; // its a color!\r\n    }\r\n    return false;\r\n  };\r\n  /*\r\n    Input types:\r\n    destination = json object with the form {name: String, countryCode: String of size 2, priceMultiplier: float}\r\n    destArr = array with destinations from database*/\r\n  this.isValidDestination = function(dest, arrayDest) {\r\n    if (dest !== undefined && arrayDest !== undefined) {\r\n      for (let i = 0; i < arrayDest.length; i++) {\r\n        if (\r\n          arrayDest[i].countryCode !== undefined &&\r\n          dest.countryCode !== undefined &&\r\n          arrayDest[i].countryCode === dest.countryCode\r\n        ) {\r\n          return true;\r\n        } else {\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  /*\r\n    Input types:\r\n    destination = string of size 2(international country code)\r\n    destArr = array with destinations from database*/\r\n  this.validateDestination = function(destination, destArr) {\r\n    if (destination !== undefined && destArr !== undefined) {\r\n      for (let i = 0; i < destArr.length; i++) {\r\n        if (destArr[i].countryCode === destination) {\r\n          return true;\r\n        } else {\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  /*\r\n    input type:\r\n    String with valid color value of #RRGGBB*/\r\n  this.validateColor = function(color) {\r\n    if (color !== undefined) {\r\n      if (!this.isBlue(color)) {\r\n        if (this.isColor(color)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  /*\r\n    input type:\r\n    String (representing an integer)*/\r\n  this.validateWeight = function(weight) {\r\n    if (weight !== undefined) {\r\n      if (weight !== undefined) {\r\n        if (this.isNumeric(weight)) {\r\n          if (parseInt(weight) > 0 && parseInt(weight) < 20000) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  /*\r\n    inut type:\r\n    String of arbitrairy size > 0*/\r\n  this.validateName = function(name) {\r\n    if (name !== undefined) {\r\n      if (name !== undefined && name.length > 0 && name.length < 101) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n  /* \r\n    input types: \r\n    box of type json with values as follows:\r\n     name:string, weight:integer, color, String(#RRGGBB in hex), countryCode: xx(international countrycode) from database\r\n    destArr of type array of arbitrairy size with elements of type json example:\r\n     {name: String, weight: integer, color:String(#RRGGBB in hex), countryCode:String (international countrycode) from database}*/\r\n  this.validateSave = function(box, destArr) {\r\n    if (!this.validateName(box.name)) {\r\n      return false;\r\n    }\r\n    if (!this.validateWeight(box.weight)) {\r\n      return false;\r\n    }\r\n    if (!this.validateColor(box.color)) {\r\n      return false;\r\n    }\r\n    if (!this.validateDestination(box.destination, destArr)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\nmodule.exports = ValidationToolBox;\r\n","export const updateDestAsnc = dest => {\r\n  return { type: \"UPDATE_DESTINATIONS\", data: dest };\r\n};\r\n\r\nexport const updateBoxesAsnc = boxes => {\r\n  return { type: \"UPDATE_BOXES\", data: boxes };\r\n};\r\n\r\nexport const updateDest = () => {\r\n  return dispach => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", \"http://localhost:8080/api/box/destinations\", true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function() {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          var resp = xhr.responseText;\r\n          var respJson = JSON.parse(resp);\r\n          return dispach(updateDestAsnc(respJson));\r\n        }\r\n      }\r\n    };\r\n  };\r\n};\r\n\r\nexport const save = box => {\r\n  return dispach => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"http://localhost:8080/api/box/save\", true);\r\n    xhr.setRequestHeader(\"content-type\", \"application/json\");\r\n    xhr.send(JSON.stringify(box));\r\n    xhr.onreadystatechange = function() {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          var resp = xhr.responseText;\r\n          var respJson = JSON.parse(resp);\r\n          if (\r\n            respJson.status !== undefined &&\r\n            respJson.status.localeCompare(\"success\") === 0\r\n          ) {\r\n            dispach({ type: \"SAVED\", value: true });\r\n          } else {\r\n            promtInvalidInputs(JSON.parse(xhr.responseText).status, dispach);\r\n          }\r\n\r\n          return;\r\n        }\r\n      }\r\n    };\r\n  };\r\n};\r\n\r\nfunction promtInvalidInputs(inputCode, dispach) {\r\n  dispach({\r\n    type: \"NAME_SERVER_ERROR\",\r\n    value: false\r\n  });\r\n  dispach({\r\n    type: \"WEIGHT_SERVER_ERROR\",\r\n    value: false\r\n  });\r\n  dispach({\r\n    type: \"COLOR_SERVER_ERROR\",\r\n    value: false\r\n  });\r\n  dispach({\r\n    type: \"DESTINATION_SERVER_ERROR\",\r\n    value: false\r\n  });\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    if (inputCode[i] === \"N\") {\r\n      dispach({\r\n        type: \"NAME_SERVER_ERROR\",\r\n        value: true\r\n      });\r\n    }\r\n    if (inputCode[i] === \"W\") {\r\n      dispach({\r\n        type: \"WEIGHT_SERVER_ERROR\",\r\n        value: true\r\n      });\r\n    }\r\n    if (inputCode[i] === \"C\") {\r\n      dispach({\r\n        type: \"COLOR_SERVER_ERROR\",\r\n        value: true\r\n      });\r\n    }\r\n    if (inputCode[i] === \"D\") {\r\n      dispach({\r\n        type: \"DESTINATION_SERVER_ERROR\",\r\n        value: true\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateBoxes = () => {\r\n  return dispach => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", \"http://localhost:8080/api/box/list\", true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function() {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          var resp = xhr.responseText;\r\n          var respJson = JSON.parse(resp);\r\n          return dispach(updateBoxesAsnc(respJson));\r\n        }\r\n      }\r\n    };\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreator from \"../store/actions/actions\";\r\n\r\nclass BoxTable extends Component {\r\n  componentDidMount() {\r\n    this.props.onUpdateBoxes();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Shippling list</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Weight</th>\r\n              <th>Color</th>\r\n              <th>Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.boxes.map((box, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{box.name}</td>\r\n                  <td>{box.weight}</td>\r\n                  <td style={{ backgroundColor: box.color }}></td>\r\n                  <td>\r\n                    {(\r\n                      parseFloat(box.weight) *\r\n                      parseFloat(box.destination.priceMultiplier)\r\n                    ).toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n\r\n            <tr id=\"summary\">\r\n              <td>totalweight </td>\r\n              <td>{this.props.totalWeight.toFixed(2)}</td>\r\n              <td>totalprice </td>\r\n              <td>{this.props.totalPrice.toFixed(2)}</td>\r\n              <td> </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boxes: state.boxes,\r\n    totalPrice: state.totalPrice,\r\n    totalWeight: state.totalWeight\r\n  };\r\n};\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    onUpdateBoxes: () => dispatch(actionCreator.updateBoxes())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(BoxTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreator from \"../store/actions/actions\";\r\n\r\nlet ValidationToolBox = require(\"../tools/ValidationToolBox\");\r\nlet tools = new ValidationToolBox();\r\n\r\nclass SaveButton extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            this.props.onUpdateSave(this.props.box, this.props.destArr);\r\n          }}\r\n        >\r\n          save\r\n        </button>\r\n        <div className={this.props.saved} hidden={!this.props.hideSave}>\r\n          <p>Saved box</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"errorText\" hidden={!this.props.serverErrorBanner}>\r\n            An error occured while uploading a box\r\n          </p>\r\n          <p className=\"errorText\" hidden={!this.props.serverErrors.name}>\r\n            The name is not recognized ny the server\r\n          </p>\r\n          <p className=\"errorText\" hidden={!this.props.serverErrors.weight}>\r\n            The weight is not valid\r\n          </p>\r\n          <p className=\"errorText\" hidden={!this.props.serverErrors.color}>\r\n            The color is not a valid color\r\n          </p>\r\n          <p\r\n            className=\"errorText\"\r\n            hidden={!this.props.serverErrors.destination}\r\n          >\r\n            The destination is not a valid destination\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hideSave: state.saved,\r\n    saved: state.saved + \"Save\",\r\n    valid:\r\n      !(\r\n        state.serverErrors.name ||\r\n        state.serverErrors.weight ||\r\n        state.serverErrors.color ||\r\n        state.serverErrors.destination\r\n      ) + \"\",\r\n    box: {\r\n      name: state.name,\r\n      weight: state.weight,\r\n      color: state.color,\r\n      destination: state.destination.countryCode\r\n    },\r\n    serverErrors: state.serverErrors,\r\n    serverErrorBanner:\r\n      state.serverErrors.name ||\r\n      state.serverErrors.weight ||\r\n      state.serverErrors.color ||\r\n      state.serverErrors.destination,\r\n    errorTexts: [\r\n      state.nameErrorText,\r\n      state.weightErrorText,\r\n      state.colorErrorText,\r\n      state.destinationErrorText\r\n    ],\r\n    destArr: state.destinations\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    onUpdateSave: (boxData, destArr) => {\r\n      dispatch({ type: \"VALIDATE_NAME\" });\r\n      dispatch({ type: \"VALIDATE_WEIGHT\" });\r\n      dispatch({ type: \"VALIDATE_COLOR\" });\r\n      dispatch({ type: \"VALIDATE_DESTINATION\" });\r\n      if (tools.validateSave(boxData, destArr)) {\r\n        let finalBox = {\r\n          name: boxData.name,\r\n          weight: parseInt(boxData.weight),\r\n          color: boxData.color,\r\n          countryCode: boxData.destination\r\n        };\r\n\r\n        dispatch(actionCreator.save(finalBox));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(SaveButton);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreator from \"../store/actions/actions\";\r\n\r\nclass SelectDestination extends Component {\r\n  componentDidMount() {\r\n    this.props.onUpdateDestinations(); // load destination data from server\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"input-wrapper\">\r\n        Destination\r\n        <br />\r\n        <select\r\n          className={this.props.valid}\r\n          onChange={this.props.onChangeDestination}\r\n        >\r\n          <option>-choose dest-</option>\r\n          {this.props.destinations.map((dest, index) => {\r\n            return (\r\n              <option key={index} value={dest.countryCode}>\r\n                {dest.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <div className=\"errorText\">{this.props.errorText}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    valid: (!state.destinationErrorText.length > 0) + \"\",\r\n    destination: state.destination,\r\n    errorText: state.destinationErrorText,\r\n    destinations: state.destinations\r\n  };\r\n};\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    onUpdateDestinations: () => {\r\n      dispatch(actionCreator.updateDest());\r\n    },\r\n    onChangeDestination: evt => {\r\n      dispatch({\r\n        type: \"CHANGE_DESTINATION\",\r\n        data: evt.target.selectedIndex - 1\r\n      });\r\n      dispatch({\r\n        type: \"VALIDATE_DESTINATION\",\r\n        data: evt.target.selectedIndex - 1\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(SelectDestination);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ColorPicker extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"input-wrapper\">\r\n        Color\r\n        <br />\r\n        <div\r\n          style={{ backgroundColor: this.props.color }}\r\n          className={this.props.valid}\r\n        >\r\n          <input\r\n            id=\"picker\"\r\n            type=\"color\"\r\n            value={this.props.color}\r\n            onBlur={this.props.onvalidate}\r\n            onChange={this.props.onColorChange}\r\n          />\r\n        </div>\r\n        <div className=\"errorText\">{this.props.errors}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    valid: (!state.colorErrorText.length > 0) + \"\",\r\n    color: state.color,\r\n    errors: state.colorErrorText\r\n  };\r\n};\r\nconst mapDispachToProps = (dispatch, box) => {\r\n  return {\r\n    onColorChange: evt => {\r\n      dispatch({ type: \"COLOR_CHANGE\", color: evt.target.value });\r\n      dispatch({ type: \"VALIDATE_COLOR\" });\r\n    },\r\n    onvalidate: () => {\r\n      dispatch({ type: \"VALIDATE_COLOR\" });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(ColorPicker);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass WeightInput extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"input-wrapper\">\r\n        Weight\r\n        <br />\r\n        <input\r\n          className={this.props.valid}\r\n          id=\"number\"\r\n          type=\"text\"\r\n          onBlur={() => {\r\n            this.props.onvalidate();\r\n          }}\r\n          onChange={this.props.onNumberChange}\r\n        />\r\n        <div className=\"errorText\">{this.props.errors}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    valid: (!state.weightErrorText.length > 0) + \"\",\r\n    weight: state.weight,\r\n    errors: state.weightErrorText\r\n  };\r\n};\r\nconst mapDispachToProps = (dispatch, box) => {\r\n  return {\r\n    onNumberChange: evt => {\r\n      dispatch({ type: \"NUMBER_CHANGE\", text: evt.target.value });\r\n      dispatch({ type: \"VALIDATE_WEIGHT\" });\r\n    },\r\n    onvalidate: () => {\r\n      dispatch({ type: \"VALIDATE_WEIGHT\" });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(WeightInput);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass NameInput extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"input-wrapper\">\r\n        Name\r\n        <br />\r\n        <input\r\n          className={this.props.valid}\r\n          type=\"text\"\r\n          onBlur={() => {\r\n            this.props.onvalidate();\r\n          }}\r\n          onChange={evt => {\r\n            this.props.onNameChange(evt.target.value);\r\n          }}\r\n        />\r\n        <div className=\"errorText\">{this.props.errorText}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    valid: (!state.nameErrorText.length > 0) + \"\",\r\n    name: state.name,\r\n    errorText: state.nameErrorText,\r\n    errors: state.errors.nameErrors\r\n  };\r\n};\r\nconst mapDispachToProps = dispatch => {\r\n  return {\r\n    onNameChange: name => {\r\n      dispatch({ type: \"NAME_CHANGE\", data: name });\r\n      dispatch({ type: \"VALIDATE_NAME\" });\r\n    },\r\n    onvalidate: () => {\r\n      dispatch({ type: \"VALIDATE_NAME\" });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(NameInput);\r\n","import React, { Component } from \"react\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport SelectDestination from \"./SelectDestination\";\r\nimport ColorPicker from \"./ColorPicker\";\r\nimport WeightInput from \"./WeightInput\";\r\nimport NameInput from \"./NameInput\";\r\n\r\nclass BoxForm extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"boxForm\">\r\n        <h1>Depart box</h1>\r\n        <NameInput />\r\n        <WeightInput />\r\n        <ColorPicker />\r\n        <SelectDestination />\r\n        <SaveButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BoxForm;\r\n","import React, { Component } from \"react\";\nimport \"./css/styles.css\";\nimport { Route, Switch, HashRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BoxTable from \"./components/BoxTable\";\nimport BoxForm from \"./components/BoxForm\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div id=\"body\">\n          <div id=\"navigator\">\n            <Link className=\"link\" onClick={this.props.onReset} to=\"/addbox\">\n              Add\n            </Link>\n            <Link className=\"link\" onClick={this.props.onReset} to=\"/listboxes\">\n              List\n            </Link>\n            <div />\n          </div>\n          <div id=\"content\">\n            <Switch>\n              <Route path=\"/addbox\" component={BoxForm} />\n              <Route path=\"/listboxes\" component={BoxTable} />\n            </Switch>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispachToProps = dispatch => {\n  return {\n    onReset: () => {\n      dispatch({ type: \"RESET_INPUTS\" });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispachToProps\n)(App);\n","let ValidationToolBox = require(\"../tools/ValidationToolBox\");\r\nlet tools = new ValidationToolBox();\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  weight: 0,\r\n  color: \"#2ab3bf\",\r\n  destination: [],\r\n  destinations: [],\r\n  progress: false,\r\n  boxes: [],\r\n  totalWeight: 0,\r\n  totalPrice: 0,\r\n  nameErrorText: \"\",\r\n  weightErrorText: \"\",\r\n  colorErrorText: \"\",\r\n  destinationErrorText: \"\",\r\n  saved: false,\r\n  serverErrors: {\r\n    name: false,\r\n    weight: false,\r\n    color: false,\r\n    destination: false\r\n  },\r\n  lastLength: 0,\r\n  errors: {\r\n    nameErrors: {\r\n      isEmpty: {\r\n        status: true,\r\n        errorText: \"Empty feilds are not allowed, please enter a name\"\r\n      },\r\n      isToLong: {\r\n        status: false,\r\n        errorText: \"Name is too long, please enter a shorter name\"\r\n      }\r\n    },\r\n    weightErrors: {\r\n      isZero: {\r\n        status: false,\r\n        errorText:\r\n          \"Only non-zero positive integers are acceptable as weights, please re-enter\"\r\n      },\r\n      isNegative: {\r\n        status: false,\r\n        errorText: \"Negative numbers are not allowed, please re-enter weight\"\r\n      },\r\n      isEmpty: {\r\n        status: true,\r\n        errorText: \"Empty feilds are not allowed, please enter weight\"\r\n      },\r\n      isNumeric: {\r\n        status: false,\r\n        errorText:\r\n          \"Non mumeric caracters are not allowed. Allowed: (0-9) Not Allowed: (all other ex: -/&%¤#!()=?`^*abc...\"\r\n      },\r\n      tooHeavy: {\r\n        status: false,\r\n        errorText:\r\n          \"Our shipping facility can only accept boxes with a total weight of up to 20 000 kg. Please enter a lighter box.\"\r\n      }\r\n    },\r\n    colorErrors: {\r\n      isBlue: {\r\n        status: false,\r\n        errorText: \"Blue colors are not allowed, plese re-enter color\"\r\n      },\r\n      isColor: {\r\n        status: true,\r\n        errorText:\r\n          \"The value of the colorpicker is not valid please enter another color\"\r\n      }\r\n    },\r\n    destinationerrors: {\r\n      isProperDestination: {\r\n        status: false,\r\n        errorText:\r\n          \"The destination specified is not acceptable, please re-enter\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const newState = { ...state }; // copy of state to moddify\r\n\r\n  //--set states--\r\n  if (action.type === \"NUMBER_CHANGE\") {\r\n    if (!tools.isNumeric(action.text)) {\r\n      document.getElementById(\"number\").value = action.text.substring(\r\n        0,\r\n        action.text.length - newState.lastLength - action.text.length\r\n      );\r\n    } else {\r\n      newState.weight = action.text;\r\n      newState.lastLength = newState.weight.length;\r\n    }\r\n  }\r\n\r\n  if (action.type === \"COLOR_CHANGE\") {\r\n    newState.color = action.color;\r\n  }\r\n\r\n  if (action.type === \"UPDATE_DESTINATIONS\") {\r\n    newState.destinations = action.data;\r\n  }\r\n\r\n  if (action.type === \"SAVED\") {\r\n    newState.saved = action.value;\r\n    return newState;\r\n  }\r\n\r\n  if (action.type === \"CHANGE_DESTINATION\") {\r\n    if (action.data < 0 || action.data > 3) {\r\n      newState.destination = [\r\n        {\r\n          countryCode: \"invalid\",\r\n          name: \"invalid\",\r\n          priceMultiplier: 1000\r\n        }\r\n      ];\r\n    } else {\r\n      newState.destination = newState.destinations[action.data];\r\n    }\r\n  }\r\n  if (action.type === \"RESET_INPUTS\") {\r\n    newState.name = initialState.name;\r\n    newState.weight = initialState.weight;\r\n    newState.color = initialState.color;\r\n    newState.destination = initialState.destination;\r\n    newState.colorErrorText = initialState.colorErrorText;\r\n    newState.nameErrorText = initialState.nameErrorText;\r\n    newState.weightErrorText = initialState.weightErrorText;\r\n    newState.destinationErrorText = initialState.destinationErrorText;\r\n    newState.errors = initialState.errors;\r\n  }\r\n\r\n  if (action.type === \"UPDATE_BOXES\") {\r\n    newState.boxes = action.data.boxes;\r\n    newState.totalPrice = action.data.totalPrice;\r\n    newState.totalWeight = action.data.totalWeight;\r\n  }\r\n\r\n  if (action.type === \"NAME_CHANGE\") {\r\n    newState.name = action.data;\r\n  }\r\n\r\n  if (action.type === \"NAME_SERVER_ERROR\") {\r\n    newState.serverErrors.name = action.value;\r\n  }\r\n\r\n  if (action.type === \"WEIGHT_SERVER_ERROR\") {\r\n    newState.serverErrors.weight = action.value;\r\n  }\r\n\r\n  if (action.type === \"COLOR_SERVER_ERROR\") {\r\n    newState.serverErrors.color = action.value;\r\n  }\r\n\r\n  if (action.type === \"DESTINATION_SERVER_ERROR\") {\r\n    newState.serverErrors.destination = action.value;\r\n  }\r\n  //--Validation of form inputs--\r\n  if (action.type === \"VALIDATE_NAME\") {\r\n    let nameErrors = newState.errors.nameErrors;\r\n    let name = newState.name;\r\n    newState.nameErrorText = \"\";\r\n    if (name.length < 1) {\r\n      nameErrors.isEmpty.status = true;\r\n      newState.nameErrorText += nameErrors.isEmpty.errorText;\r\n    } else {\r\n      nameErrors.isEmpty.status = initialState.errors.nameErrors.isEmpty.status;\r\n    }\r\n    if (name.length > 100) {\r\n      nameErrors.isToLong.status = true;\r\n      newState.nameErrorText += nameErrors.isToLong.errorText;\r\n    } else {\r\n      nameErrors.isToLong.status =\r\n        initialState.errors.nameErrors.isToLong.status;\r\n    }\r\n  }\r\n\r\n  if (action.type === \"VALIDATE_WEIGHT\") {\r\n    let weightErrors = newState.errors.weightErrors;\r\n    let initialError = initialState.errors.weightErrors;\r\n    let weight = newState.weight;\r\n    newState.weightErrorText = \"\";\r\n    if (weight.length < 1) {\r\n      weightErrors.isEmpty.status = true;\r\n      newState.weightErrorText += weightErrors.isEmpty.errorText;\r\n    } else {\r\n      weightErrors.isEmpty.status = initialError.isEmpty.status;\r\n    }\r\n    if (!tools.isNumeric(weight)) {\r\n      weightErrors.isNumeric.status = false;\r\n      newState.weightErrorText += weightErrors.isNumeric.errorText;\r\n    } else {\r\n      weightErrors.isNumeric.status = initialError.isNumeric.status;\r\n    }\r\n    if (tools.isNumeric(weight) && parseInt(weight) < 0) {\r\n      document.getElementById(\"number\").text = \"0\";\r\n      document.getElementById(\"number\").value = \"0\";\r\n      newState.weight = \"0\";\r\n      weightErrors.isNegative.status = true;\r\n      newState.weightErrorText += weightErrors.isNegative.errorText;\r\n    } else {\r\n      weightErrors.isNegative.status = initialError.isNegative.status;\r\n    }\r\n    if (tools.isNumeric(weight) && parseInt(weight) === 0) {\r\n      weightErrors.isZero.status = true;\r\n      newState.weightErrorText += weightErrors.isZero.errorText;\r\n    } else {\r\n      weightErrors.isZero.status = initialError.isZero.status;\r\n    }\r\n\r\n    if (tools.isNumeric(weight) && parseInt(weight) > 20000) {\r\n      weightErrors.tooHeavy.status = true;\r\n      newState.weightErrorText += weightErrors.tooHeavy.errorText;\r\n    } else {\r\n      weightErrors.tooHeavy.status = initialError.tooHeavy.status;\r\n    }\r\n  }\r\n\r\n  if (action.type === \"VALIDATE_COLOR\") {\r\n    let colorErrors = newState.errors.colorErrors;\r\n    let color = newState.color;\r\n    newState.colorErrorText = \"\";\r\n    if (tools.isBlue(color)) {\r\n      colorErrors.isBlue.status = true;\r\n      newState.colorErrorText += colorErrors.isBlue.errorText;\r\n    } else {\r\n      colorErrors.isBlue.status = initialState.errors.colorErrors.isBlue.status;\r\n    }\r\n    if (!tools.isColor(color)) {\r\n      colorErrors.isColor.status = false;\r\n      newState.colorErrorText += colorErrors.isColor.errorText;\r\n    } else {\r\n      colorErrors.isColor.status =\r\n        initialState.errors.colorErrors.isColor.status;\r\n    }\r\n  }\r\n\r\n  if (action.type === \"VALIDATE_DESTINATION\") {\r\n    let destinationErrors = newState.errors.destinationerrors;\r\n    newState.destinationErrorText = \"\";\r\n    if (\r\n      !tools.isValidDestination(newState.destination, newState.destinations)\r\n    ) {\r\n      destinationErrors.status = false;\r\n      newState.destinationErrorText +=\r\n        destinationErrors.isProperDestination.errorText;\r\n    } else {\r\n      destinationErrors.isProperDestination.status =\r\n        initialState.errors.destinationerrors.isProperDestination.status;\r\n    }\r\n  }\r\n  newState.saved = false;\r\n  return newState;\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./store/reducer\";\nimport thunk from \"redux-thunk\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASE || \"\"}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}